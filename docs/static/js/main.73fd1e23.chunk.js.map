{"version":3,"sources":["Components/AddCategory.js","helpers/getGifs.js","Hooks/useFetchGifs.js","Components/GifGridItem.js","Components/GifGrid.js","Components/GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","Fragment","onSubmit","ev","trim","length","preventDefault","category","type","placeholder","value","onChange","target","getGifs","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","useFetchGifs","loading","state","setState","useEffect","then","imgs","setTimeout","GifGridItem","className","src","alt","GifGrid","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"kNAqCeA,EAlCK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEHC,mBAAS,IAFN,mBAEhCC,EAFgC,KAEpBC,EAFoB,KAgBvC,OACI,cAAC,IAAMC,SAAP,UACI,sBAAMC,SAVO,SAACC,GAChBJ,EAAWK,OAAOC,OAAS,IACzBF,EAAGG,iBACHT,GAAc,SAAAU,GAAQ,OAAKR,GAAL,mBAAoBQ,OAC1CP,EAAc,MAMd,SACI,uBACIQ,KAAK,OACLC,YAAY,+BACZC,MAAQX,EACRY,SAnBU,SAAER,GACxBH,EAAcG,EAAGS,OAAOF,e,+BCSjBG,EAjBF,uCAAG,WAAQN,GAAR,uBAAAO,EAAA,4DACG,mCAETC,EAHM,iDAG0CC,UAAUT,GAHpD,6BACG,oCADH,SAIOU,MAAMF,GAJb,cAING,EAJM,gBAKWA,EAAKC,OALhB,uBAKJC,EALI,EAKJA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAX9B,kBAcLM,GAdK,4CAAH,sDCyBEO,EAtBM,SAAErB,GAAe,IAAD,EAEPT,mBAAS,CAC/BsB,KAAM,GACNS,SAAS,IAJoB,mBAE1BC,EAF0B,KAEnBC,EAFmB,KAmBjC,OAZAC,qBAAU,WACNnB,EAASN,GACJ0B,MAAM,SAAAC,GACHC,YAAW,WACPJ,EAAS,CACLX,KAAMc,EACNL,SAAS,MAEd,UAEZ,CAACtB,IAEGuB,GCRIM,EAZK,SAAC,GAAqB,EAApBZ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAE7B,OACI,cAAC,IAAMd,SAAP,UACI,sBAAKoC,UAAU,yCAAf,UACI,qBAAKC,IAAKvB,EAAKwB,IAAKd,IACpB,4BAAIA,UCkBLe,EAtBE,SAAC,GAAgB,IAAfjC,EAAc,EAAdA,SAAc,EAEGqB,EAAcrB,GAAlCmB,EAFiB,EAEtBN,KAAaS,EAFS,EAETA,QAEpB,OACI,eAAC,IAAM5B,SAAP,WACI,oBAAIoC,UAAU,oCAAd,SAAmD9B,IAClDsB,GAAW,mBAAGQ,UAAU,oCAAb,qBACZ,qBAAKA,UAAU,YAAf,SAEQX,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAEQA,GADCA,EAAIC,aCWtBiB,EAvBM,WAAM,MAGa3C,mBAAS,CAAE,WAHxB,mBAGhB4C,EAHgB,KAGJ7C,EAHI,KAKvB,OACI,eAAC,IAAMI,SAAP,WACI,8CACA,cAAC,EAAD,CACIJ,cAAgBA,IAEpB,uBAEI,6BACK6C,EAAWpB,KAAI,SAAAf,GAAQ,OAAI,cAAC,EAAD,CAExBA,SAAUA,GADLA,Y,MCd7BoC,IAASC,OACP,cAAC,IAAM3C,SAAP,UACE,cAAC,EAAD,MAEF4C,SAASC,eAAe,W","file":"static/js/main.73fd1e23.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handelInputChange = ( ev ) => {\r\n        setInputValue(ev.target.value)\r\n    }\r\n\r\n    const handelSubmit = (ev) =>{\r\n       if(inputValue.trim().length > 2){\r\n            ev.preventDefault();\r\n            setCategories(category => [inputValue, ...category]);\r\n            setInputValue('')\r\n       }\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <form onSubmit={handelSubmit}>\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Puedes hacer una busqueda...\"\r\n                    value={ inputValue }\r\n                    onChange={ handelInputChange }\r\n                />\r\n            </form>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory\r\n","const getGifs = async ( category ) => {\r\n    const apikey = 'H8ZEIA0RMqHdswgwyykE1Z8wlZDAqLdG';\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=${apikey}`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map((img) =>{\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n    return gifs;\r\n}\r\n\r\nexport default getGifs;","import {useState, useEffect } from 'react';\r\nimport getGifs from '../helpers/getGifs';\r\n\r\nconst useFetchGifs = ( category ) => {\r\n   \r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() =>{\r\n        getGifs( category )\r\n            .then( imgs => {\r\n                setTimeout(() => {\r\n                    setState({\r\n                        data: imgs,\r\n                        loading: false\r\n                     })\r\n                }, 3000);\r\n            });\r\n    }, [category])\r\n\r\n    return state; // {data: [], loading: true }\r\n}\r\n\r\nexport default useFetchGifs;\r\n","import React from 'react';\r\n\r\nconst GifGridItem = ({id, title, url}) => {\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className='card animate__animated animate__fadeIn'>\r\n                <img src={url} alt={title} />\r\n                <p>{title}</p>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default GifGridItem;\r\n","import React from 'react';\r\nimport useFetchGifs from '../Hooks/useFetchGifs';\r\nimport GifGridItem from './GifGridItem';\r\n\r\n const GifGrid = ({category}) => {\r\n\r\n    const {data:images, loading } = useFetchGifs( category );\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <h3 className='animate__animated animate__zoomIn'>{category}</h3>\r\n            {loading && <p className='animate__animated animate__fadeIn'>Loading</p>}\r\n            <div className='card-grid'>\r\n                {\r\n                    images.map( img => (\r\n                        <GifGridItem \r\n                            key={img.id}\r\n                            {...img}\r\n                        />\r\n                    ))\r\n                }\r\n                </div>    \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default GifGrid;","import React, { useState }  from 'react';\r\nimport AddCategory from './AddCategory';\r\nimport GifGrid from './GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    // const categories = [ 'One Puch', 'Samurai X', 'Dragon Ball', 'Naruto'];\r\n    const [categories, setCategories] = useState([ 'Naruto']);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory\r\n                setCategories={ setCategories }\r\n            />\r\n            <hr/>\r\n            {\r\n                <ol>\r\n                    {categories.map(category => <GifGrid\r\n                        key={category}\r\n                        category={category} />)}\r\n                </ol>\r\n            }\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './Components/GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <React.Fragment>\n    <GifExpertApp />\n  </React.Fragment>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}